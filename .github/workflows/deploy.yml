# This is a basic workflow to help you get started with Actions

name: Deploy

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  workflow_run:
    workflows: ["Tests"]
    branches: [master]
    types: 
      - completed
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - uses: actions/checkout@v2
      
    - name: Setup Python
      uses: actions/setup-python@v2
      # with:
        # Version range or exact version of a Python version to use, using SemVer's version range syntax.
        # python-version: # optional, default is 3.x
        # The target architecture (x86, x64) of the Python interpreter.
        # architecture: # optional
        # Used to pull python distributions from actions/python-versions. Since there's a default, this is typically not supplied by the user.
        # token: # optional, default is ${{ github.token }}

    - name: SSH Remote Commands
      uses: appleboy/ssh-action@v0.1.2
      env:
        TELEGRAM_BOT_API_KEY: ${{ secrets.TELEGRAM_BOT_API_KEY }}
      with:
        # ssh host
        host: ${{ secrets.COFFEE_HOST }} # optional
        # ssh port
        port: ${{ secrets.COFFEE_PORT }} # optional, default is 22
        # ssh key passphrase
        # passphrase: # optional
        # ssh username
        username: ${{ secrets.COFFEE_USER }} # optional
        # ssh password
        # password: # optional
        # synchronous execution if multiple hosts
        # sync: # optional
        # include more ciphers with use_insecure_cipher
        # use_insecure_cipher: # optional
        # the allowed cipher algorithms. If unspecified then a sensible
        # cipher: # optional
        # timeout for ssh to host
        # timeout: # optional, default is 30s
        # timeout for ssh command
        # command_timeout: # optional, default is 10m
        # content of ssh private key. ex raw content of ~/.ssh/id_rsa
        key: ${{ secrets.COFFEE_KEY }} # optional
        # path of ssh private key
        # key_path: # optional
        # sha256 fingerprint of the host public key
        # fingerprint: # optional
        # ssh proxy host
        #proxy_host: # optional
        # ssh proxy port
        #proxy_port: # optional, default is 22
        # ssh proxy username
        #proxy_username: # optional
        # ssh proxy password
        #proxy_password: # optional
        # ssh proxy key passphrase
        #proxy_passphrase: # optional
        # timeout for ssh to proxy host
        #proxy_timeout: # optional, default is 30s
        # content of ssh proxy private key. ex raw content of ~/.ssh/id_rsa
        #proxy_key: # optional
        # path of ssh proxy private key
        #proxy_key_path: # optional
        # sha256 fingerprint of the proxy host public key
        #proxy_fingerprint: # optional
        # the allowed cipher algorithms. If unspecified then a sensible
        #proxy_cipher: # optional
        # include more ciphers with use_insecure_cipher
        #proxy_use_insecure_cipher: # optional
        # pass environment variable to shell script
        envs: TELEGRAM_BOT_API_KEY # optional
        # execute commands
        script: |
          export TELEGRAM_BOT_API_KEY=$TELEGRAM_BOT_API_KEY
          cd /home/coffee
          pkill -9 python || true
          rm -rf /home/coffee/telegram-coffee-bot
          git clone https://github.com/zeroxx1986/telegram-coffee-bot.git
          cd telegram-coffee-bot
          touch nohup.out
          touch nohup.err
          pip install -r requirements.txt
          nohup python main.py > nohup.out 2> nohup.err < /dev/null &
          echo 'Done'
        # stop script after first failure
        script_stop: true # optional
        # enable debug mode
        # debug: true # optional
    
    # Runs a single command using the runners shell
    #- name: Run a one-line script
    #  run: echo Hello, world!

    # Runs a set of commands using the runners shell
    #- name: Run a multi-line script
    #  run: |
    #    echo Add other actions to build,
    #    echo test, and deploy your project.
